<?xml version="1.0"?>
<!--
  To run this build script, type: 

  ant -f hw13.xml

  on a shell. 
-->

	<project name="hw13" basedir="." default="build">

		<property name="output.dir" value="bin" />
		<property name="test.output.dir" value="test/bin" />
		<property name="src.dir" value="src" />
		<property name="test.src.dir" value="test/src" />
		<property environment="env" />
		<property name="junit.output.dir" value="junit" />
		<property name="debuglevel" value="source,lines,vars" />
		<property name="target" value="1.8" />
		<property name="source" value="1.8" />
		
		<path id="classpath">
							<pathelement location="bin" />
							<pathelement location="test/bin" />
							<fileset dir="${env.JUNIT}"
							  includes="*junit*.jar" excludes="*vintage*.jar"/>
							<fileset dir="${env.JUNIT}" includes="*opentest4j*.jar" />
							<fileset dir="${env.JUNIT}" includes="*apiguardian*.jar" />
							<fileset dir="${env.JUNIT}" includes="*junit-platform-commons.jar"/>
					</path>
		
		<target name="clean">
			<delete dir="${output.dir}" />
			<delete dir="${test.output.dir}" />
		</target>

		<target name="init">
			<mkdir dir="${output.dir}" />
			<mkdir dir="${test.output.dir}" />
		</target>

		<target depends="clean" name="cleanall" />
		<target depends="clean, build-project, DjiaTest, Djia" name="build" />
		<target depends="init" name="build-project">
			<echo message="${ant.project.name}: ${ant.file}" />
			<javac debug="true" debuglevel="${debuglevel}" destdir="${output.dir}" includeantruntime="false" source="${source}" target="${target}">
				<src path="${src.dir}" />
				<classpath refid="classpath" />
			</javac>
			<javac debug="true" debuglevel="${debuglevel}" destdir="test/bin" includeantruntime="false" source="${source}" target="${target}">
				<src path="${test.src.dir}" />
				<classpath refid="classpath" />
			</javac>
		</target>

		<target name="Djia">
			<java classname="edu.umb.cs680.hw13.DJIAEvent" classpath="bin" failonerror="true" fork="yes" />
			<java classname="edu.umb.cs680.hw13.DJIAQuoteObservable" classpath="bin" failonerror="true" fork="yes" />
			<java classname="edu.umb.cs680.hw13.PieChartObserver" classpath="bin" failonerror="true" fork="yes" />
			<java classname="edu.umb.cs680.hw13.StockEvent" classpath="bin" failonerror="true" fork="yes" />
			<java classname="edu.umb.cs680.hw13.StockQuoteObservable" classpath="bin" failonerror="true" fork="yes" />
			<java classname="edu.umb.cs680.hw13.TableObserver" classpath="bin" failonerror="true" fork="yes" />
			<java classname="edu.umb.cs680.hw13.ThreeDObserver" classpath="bin" failonerror="true" fork="yes" />
		</target>

		<target name="DjiaTest">
			<junitlauncher printSummary="yes">
				<classpath refid="classpath" />

				<testclasses outputdir="test">
					<fileset dir="${test.output.dir}">
						<include name="edu/umb/cs680/hw13/*Test.class" />
					</fileset>
					<listener type="legacy-plain" sendSysOut="true" />
				</testclasses>
			</junitlauncher>
		</target>
	</project>